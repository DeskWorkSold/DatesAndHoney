//send push notification
firestore()
      .collection('token')
      .doc(passengerData.id)
      .get()
      .then(doc => {
        let token = doc.data().token;

        if (token) {
          var data = JSON.stringify({
            notification: {
              body: 'click to open the app',
              title: 'Your driver has arrived',
            },
            to: token,
          });
          let config = {
            method: 'post',
            url: 'https://fcm.googleapis.com/fcm/send',
            headers: {
              Authorization:
                'key=AAAApuKg0tA:APA91bHOO2IbbnnFhrV5s-ZsGTQQR1ltgXcGtL74enNjBwgsC_LlqWXB-Zketf6Eg1uTqPOYF3O4er_XM3QA_RqCjU4uO-znlKzxhXmgSG_1ElMKYiXXh_wZNn5S6c9tkYzURIZIooxA',
              'Content-Type': 'application/json',
            },
            data: data,
          };
          axios(config)
            .then(res => {
              console.log(res);
            })
            .catch(error => {
              console.log(error);
            });
        }
      });



//get device token
messaging()
      .hasPermission()
      .then(enabled => {
        if (enabled) {
          messaging()
            .getToken()
            .then(fcmToken => {
              if (fcmToken) {
                firestore()
                  .collection('token')
                  .doc(id)
                  .set({
                    token: fcmToken,
                    create_date: new Date(),
                  })
                  .then(() => {
                    console.log('token succssfully saved');
                  })
                  .catch(error => {
                    console.log(error);
                  });
              } else {
                console.log("user doesn't have a device token yet");
              }
            });
        } else {
          console.log('Permission Denied');
        }
      });



















//other
const SuggestMatcheFunc = async (suggestedData, data) => {
        // console.log(itemOne , itemTwo);
        // console.log('test');
        if (suggestedData && data) {
            // console.log('yes', props.userdata.suggestUser);
            setUploading(true)
            SendPushNotify(suggestedData, data);
            await firestore()
                .collection('Users').doc(data.uid).update({
                    Suggestion: firestore.FieldValue.arrayUnion({
                        SuggestedUsers: {
                            AuthorName: mediatoruser.userDetails.Name,
                            AuthorUid: mediatoruser.userDetails.uid,
                            AuthorAccountType: mediatoruser.userDetails.MediatorType,
                            SuggestedUserUid: suggestedData.uid,
                            SuggestedUserName: suggestedData.Name,
                        }
                    }),
                })
                .then(() => {
                    console.log('client req accepted');
                    ToastAndroid.show(`Suggestion send to ${data.Name}`, ToastAndroid.SHORT);
                    setUploading(false)
                    setModal(false)
                    // navigation.goBack()
                });
        }
        else {
            console.log('no');
            ToastAndroid.show("Network error try again later!", ToastAndroid.SHORT);
        }
    }
    const SendPushNotify = (suggestedData, data) => {
        firestore()
            .collection('token')
            .doc(data.uid)
            .get()
            .then(doc => {
                let token = doc.data().token;
                // console.log(token);

                // return
                if (token) {
                    var data = JSON.stringify({
                        notification: {
                            title: `Best Match suggestion from ${mediatoruser.userDetails.Name}(MC)`,
                            body: `${suggestedData.Name} is your best match found click to open the app`,
                        },
                        to: token,
                    });
                    let config = {
                        method: 'post',
                        url: 'https://fcm.googleapis.com/fcm/send',
                        headers: {
                            Authorization:
                                'key=AAAAjKV_1r4:APA91bH56x6Wf4dGGgy4pBN1FN2UBCanBAk3WPaW3gMU2sba7_Ou1xnAKL6i_bbcZx9LhShUrc_GTwkhnU-MRCWwOCvwi-Gj6Nj4eC_-8WWj8giBSCWkqfcb0H7BpcQgyC1X3lRyzGt4',
                            'Content-Type': 'application/json',
                        },
                        data: data,
                    };
                    axios(config)
                        .then(res => {
                            console.log(res);
                        })
                        .catch(error => {
                            console.log(error);
                        });
                }
            });
    }
